// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: match.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createMatch = `-- name: CreateMatch :one
INSERT INTO source.matches (region, average_elo)
VALUES ($1, $2)
RETURNING id, created_at
`

type CreateMatchParams struct {
	Region     pgtype.Text
	AverageElo pgtype.Int4
}

type CreateMatchRow struct {
	ID        pgtype.UUID
	CreatedAt pgtype.Timestamp
}

func (q *Queries) CreateMatch(ctx context.Context, arg CreateMatchParams) (CreateMatchRow, error) {
	row := q.db.QueryRow(ctx, createMatch, arg.Region, arg.AverageElo)
	var i CreateMatchRow
	err := row.Scan(&i.ID, &i.CreatedAt)
	return i, err
}

const insertMatchPlayer = `-- name: InsertMatchPlayer :exec
INSERT INTO source.match_players (match_id, user_id, team, elo)
VALUES ($1, $2, $3, $4)
`

type InsertMatchPlayerParams struct {
	MatchID pgtype.UUID
	UserID  string
	Team    pgtype.Text
	Elo     pgtype.Int4
}

func (q *Queries) InsertMatchPlayer(ctx context.Context, arg InsertMatchPlayerParams) error {
	_, err := q.db.Exec(ctx, insertMatchPlayer,
		arg.MatchID,
		arg.UserID,
		arg.Team,
		arg.Elo,
	)
	return err
}
